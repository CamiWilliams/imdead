{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _CoreExperiment = require(\"./CoreExperiment\");\n\nvar _CoreExperiment2 = _interopRequireDefault(_CoreExperiment);\n\nvar _emitter = require(\"./emitter\");\n\nvar _emitter2 = _interopRequireDefault(_emitter);\n\nvar _crc = require(\"fbjs/lib/crc32\");\n\nvar _crc2 = _interopRequireDefault(_crc);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar store = void 0;\nvar noopStore = {\n  getItem: function getItem() {},\n  setItem: function setItem() {}\n};\n\nif (typeof window !== 'undefined' && 'localStorage' in window) {\n  try {\n    var key = '__pushtell_react__';\n    window.localStorage.setItem(key, key);\n\n    if (window.localStorage.getItem(key) !== key) {\n      store = noopStore;\n    } else {\n      window.localStorage.removeItem(key);\n      store = window.localStorage;\n    }\n  } catch (e) {\n    store = noopStore;\n  }\n} else {\n  store = noopStore;\n}\n\n_emitter2.default.addActiveVariantListener(function (experimentName, variantName, skipSave) {\n  if (skipSave) {\n    return;\n  }\n\n  store.setItem('PUSHTELL-' + experimentName, variantName);\n});\n\nvar Experiment = function (_Component) {\n  _inherits(Experiment, _Component);\n\n  function Experiment() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Experiment);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Experiment.__proto__ || Object.getPrototypeOf(Experiment)).call.apply(_ref, [this].concat(args))), _this), _this.win = function () {\n      _emitter2.default.emitWin(_this.props.name);\n    }, _this.getSelectedVariant = function () {\n      /*\n       Choosing a weighted variant:\n        For C, A, B with weights 2, 4, 8\n         variants = A, B, C\n        weights = 4, 8, 2\n        weightSum = 14\n        weightedIndex = 9\n         AAAABBBBBBBBCC\n        ========^\n        Select B\n       */\n      // Sorted array of the variant names, example: [\"A\", \"B\", \"C\"]\n      var variants = _emitter2.default.getSortedVariants(_this.props.name); // Array of the variant weights, also sorted by variant name. For example, if\n      // variant C had weight 2, variant A had weight 4, and variant B had weight 8\n      // return [4, 8, 2] to correspond with [\"A\", \"B\", \"C\"]\n\n\n      var weights = _emitter2.default.getSortedVariantWeights(_this.props.name); // Sum the weights\n\n\n      var weightSum = weights.reduce(function (a, b) {\n        return a + b;\n      }, 0); // A random number between 0 and weightSum\n\n      var weightedIndex = typeof _this.props.userIdentifier === 'string' ? Math.abs((0, _crc2.default)(_this.props.userIdentifier) % weightSum) : Math.floor(Math.random() * weightSum); // Iterate through the sorted weights, and deduct each from the weightedIndex.\n      // If weightedIndex drops < 0, select the variant. If weightedIndex does not\n      // drop < 0, default to the last variant in the array that is initially assigned.\n\n      var selectedVariant = variants[variants.length - 1];\n\n      for (var index = 0; index < weights.length; index++) {\n        weightedIndex -= weights[index];\n\n        if (weightedIndex < 0) {\n          selectedVariant = variants[index];\n          break;\n        }\n      }\n\n      _emitter2.default.setActiveVariant(_this.props.name, selectedVariant);\n\n      return selectedVariant;\n    }, _this.getLocalStorageValue = function () {\n      if (typeof _this.props.userIdentifier === \"string\") {\n        return _this.getSelectedVariant();\n      }\n\n      var activeValue = _emitter2.default.getActiveVariant(_this.props.name);\n\n      if (typeof activeValue === \"string\") {\n        return activeValue;\n      }\n\n      var storedValue = store.getItem('PUSHTELL-' + _this.props.name);\n\n      if (typeof storedValue === \"string\") {\n        _emitter2.default.setActiveVariant(_this.props.name, storedValue, true);\n\n        return storedValue;\n      }\n\n      if (typeof _this.props.defaultVariantName === 'string') {\n        _emitter2.default.setActiveVariant(_this.props.name, _this.props.defaultVariantName);\n\n        return _this.props.defaultVariantName;\n      }\n\n      return _this.getSelectedVariant();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Experiment, [{\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_CoreExperiment2.default, _extends({}, this.props, {\n        value: this.getLocalStorageValue\n      }));\n    }\n  }]);\n\n  return Experiment;\n}(_react.Component);\n\nExperiment.propTypes = {\n  name: _propTypes2.default.string.isRequired,\n  defaultVariantName: _propTypes2.default.string,\n  userIdentifier: _propTypes2.default.string\n};\nExperiment.displayName = \"Pushtell.Experiment\";\nexports.default = Experiment;","map":null,"metadata":{},"sourceType":"script"}